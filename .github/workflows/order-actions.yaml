name: Build and Push Image For Order

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      imageRepository: "globaltickets.order"
      containerRegistry: "globalticketsacr.azurecr.io"
      dockerfilePath: "code/ordering/src/Ordering.WebApi/Dockerfile"
      deploymentFile: "order.yaml"
      namespace: "globaltickets"

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Print Current Directory
        run: pwd

      - name: List All Files in Repository
        run: ls -R

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.containerRegistry }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_TOKEN }}

      - name: Re-Tag Previous Latest
        run: |
          set -e
          if docker pull ${{env.containerRegistry}}/${{env.imageRepository}}:latest; then 
            echo "Successfully pulled :latest image, proceeding to re-tag."
            docker tag ${{env.containerRegistry}}/${{env.imageRepository}}:latest ${{env.containerRegistry}}/${{env.imageRepository}}:${{github.run_number}}
            docker push ${{env.containerRegistry}}/${{env.imageRepository}}:${{github.run_number}}
          else
            echo "No existing :latest image to re-tag"
          fi

      - name: Build an image from Dockerfile
        run: |
          docker build -t ${{env.containerRegistry}}/${{env.imageRepository}}:latest -f ${{env.dockerfilePath}} ${{github.workspace}}

      - name: push image to ACR
        run: |
          docker push ${{env.containerRegistry}}/${{env.imageRepository}}:latest

      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1
        with:
          files: ${{github.workspace}}/k8s/remote/${{env.deploymentFile}}
        env:
          Build.BuildId: ${{github.run_number}}

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployfile
          path: ${{github.workspace}}/k8s/remote/${{env.deploymentFile}}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: deployfile

      # ...removed Azure deployment steps...
